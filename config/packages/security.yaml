security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:    ^/
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    #- App\Security\TokenAuthenticator
            remember_me:
                secret: '%kernel.secret%'
                lifetime:   2592000 # 30jours en secondes
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                #always_remember_me: true
                #token_provider: 'Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider'

            logout:
                path: app_logout
                target: app_login
                # where to redirect after logout
                # target: app_any_route

            switch_user: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # but, definitely allow /login to be accessible anonymously
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # require the user to fully login to change password
        #- { path: ^/change-password, roles: IS_AUTHENTICATED_FULLY }
        # if you wanted to force EVERY URL to be protected
        #- { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }
        #- { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/user, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN:         [ROLE_USER, ROLE_ADMIN_ADD, ROLE_ALLOWED_TO_SWITCH]
        #ROLE_SUPER_ADMIN:   [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]